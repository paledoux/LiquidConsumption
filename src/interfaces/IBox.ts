import { ReactNode } from "react";
import { StyleProp, ViewProps, ViewStyle } from "react-native";
import { BORDERRADII, COLOR, SPACING } from "../assets/theme";

export default interface IBox extends ViewProps {
  children?: ReactNode;
  backfaceVisibility?: ViewStyle["backfaceVisibility"];
  backgroundColor?: keyof typeof COLOR;
  borderBottomColor?: keyof typeof COLOR;
  borderBottomEndRadius?: keyof typeof BORDERRADII;
  borderBottomLeftRadius?: keyof typeof BORDERRADII;
  borderBottomRightRadius?: keyof typeof BORDERRADII;
  borderBottomStartRadius?: keyof typeof BORDERRADII;
  borderColor?: keyof typeof COLOR;
  borderEndColor?: keyof typeof COLOR;
  borderLeftColor?: keyof typeof COLOR;
  borderRadius?: keyof typeof BORDERRADII;
  borderRightColor?: keyof typeof COLOR;
  borderStartColor?: keyof typeof COLOR;
  borderStyle?: ViewStyle["borderStyle"];
  borderTopColor?: keyof typeof COLOR;
  borderTopEndRadius?: keyof typeof BORDERRADII;
  borderTopLeftRadius?: keyof typeof BORDERRADII;
  borderTopRightRadius?: keyof typeof BORDERRADII;
  borderTopStartRadius?: keyof typeof BORDERRADII;
  opacity?: ViewStyle["opacity"];
  alignContent?: ViewStyle["alignContent"];
  alignItems?: ViewStyle["alignItems"];
  alignSelf?: ViewStyle["alignSelf"];
  aspectRatio?: ViewStyle["aspectRatio"];
  borderBottomWidth?: ViewStyle["borderBottomWidth"];
  borderEndWidth?: ViewStyle["borderEndWidth"];
  borderLeftWidth?: ViewStyle["borderLeftWidth"];
  borderRightWidth?: ViewStyle["borderRightWidth"];
  borderStartWidth?: ViewStyle["borderStartWidth"];
  borderTopWidth?: ViewStyle["borderTopWidth"];
  borderWidth?: ViewStyle["borderWidth"];
  bottom?: ViewStyle["bottom"];
  display?: ViewStyle["display"];
  end?: ViewStyle["end"];
  flex?: ViewStyle["flex"];
  flexBasis?: ViewStyle["flexBasis"];
  flexDirection?: ViewStyle["flexDirection"];
  flexGrow?: ViewStyle["flexGrow"];
  flexShrink?: ViewStyle["flexShrink"];
  flexWrap?: ViewStyle["flexWrap"];
  height?: ViewStyle["height"];
  justifyContent?: ViewStyle["justifyContent"];
  left?: ViewStyle["left"];
  margin?: keyof typeof SPACING;
  marginBottom?: keyof typeof SPACING;
  marginEnd?: keyof typeof SPACING;
  marginHorizontal?: keyof typeof SPACING;
  marginLeft?: keyof typeof SPACING;
  marginRight?: keyof typeof SPACING;
  marginStart?: keyof typeof SPACING;
  marginTop?: keyof typeof SPACING;
  marginVertical?: keyof typeof SPACING;
  maxHeight?: ViewStyle["maxHeight"];
  maxWidth?: ViewStyle["maxWidth"];
  minHeight?: ViewStyle["minHeight"];
  minWidth?: ViewStyle["minWidth"];
  overflow?: ViewStyle["overflow"];
  padding?: keyof typeof SPACING;
  paddingBottom?: keyof typeof SPACING;
  paddingEnd?: keyof typeof SPACING;
  paddingHorizontal?: keyof typeof SPACING;
  paddingLeft?: keyof typeof SPACING;
  paddingRight?: keyof typeof SPACING;
  paddingStart?: keyof typeof SPACING;
  paddingTop?: keyof typeof SPACING;
  paddingVertical?: keyof typeof SPACING;
  position?: ViewStyle["position"];
  right?: ViewStyle["right"];
  start?: ViewStyle["start"];
  top?: ViewStyle["top"];
  width?: ViewStyle["width"];
  zIndex?: ViewStyle["zIndex"];
  style?: StyleProp<ViewStyle>;
}
